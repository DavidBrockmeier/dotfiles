#!/bin/zsh
# script to find the shortest abbreviation for autojump for the current, or given directory

dangerous() {
    # these cannot be arguments to zoxide query
    if [[ $1 == "-i" ]]; then
        echo "sorry, can't check for -i"
        return 0
    fi
    if [[ $1 == "-s" ]]; then
        echo "sorry, can't check for -s"
        return 0
    fi
    local strippedWhitespace=$(echo - $1 | xargs)
    if [[ $1 != $strippedWhitespace ]]; then
        echo "space is a bad abbreviation ($1)"
        return 0
    fi
    return 2
}

if [ -z "$1" ]; then
    local directory=$PWD
else
    local directory=$(realpath $1)
    if [ ! -d "$directory" ]; then
        echo "$directory is not a valid, existing directory"
        exit 1
    fi
fi

local basename=$(basename $directory | tr '[:upper:]' '[:lower:]')

local baseLength=${#basename}
for ((length = 1; length < baseLength + 1; length++)); do
    local abbrevs=()
    for ((offset = 0; offset < $((baseLength - length + 1)); offset++)); do
        local fragment=${basename:$offset:$length}
        if dangerous $fragment; then
            continue
        fi
        local foundDirectory=$(zoxide query $fragment 2>/dev/null || true)

        if [[ "$foundDirectory" == "$directory" ]]; then
            abbrevs+=$fragment
        fi
    done
    if [ ${#abbrevs[@]} -gt 0 ]; then
        # only type unique abbrevs
        echo "${abbrevs[@]}" | tr ' ' '\n' | awk '!a[$0]++'
        exit 0
    fi
done

echo "No abbreviation found for $(basename $directory)"
exit 3
