#compdef code

# zsh completions for 'code'
local arguments

arguments=(
    {-d,--diff}'[Compare two files with each other.]:file to compare:_files:file to compare with:_files'
    {-a,--add}'[Add folder(s) to the last active window.]:folder:_directories'
    {-g,--goto}'[Open a file at the path on the specified]'
    {-n,--new-window}'[Force to open a new window.]'
    {-r,--reuse-window}'[Force to open a file or folder in the last active window.]'
    {-w,--wait}'[Wait for the files to be closed before]'
    '--locale[The locale to use (e.g. en-US or zh-TW).]:locale'
    '--user-data-dir[Specifies the directory that user data is in.]:directory:_directories'
    {-v,--version}'[Print version.]'
    {-h,--help}'[Print usage.]'
    '--extensions-dir[Set the root path for extensions.]:root path:_directories'
    '--list-extensions[List the installed extensions.]'
    '--show-versions[Show versions of installed extensions, when using --list-extension.]'
    '--install-extension[Installs an extension.]:id or path:_files -g "*.vsix"'
    '--uninstall-extension[Uninstalls an extension.]:id or path:_files -g "*.vsix"'
    '--enable-proposed-api[Enables proposed api features for an extension.]:extension id:'
    '--verbose[Print verbose output (implies --wait).]'
    '--log[Log level to use. Default is info.]:level:(critical error warn info debug trace off)'
    {-s,--status}'[Print process usage and diagnostics information.]'
    {-p,--performance}'[Start with the "Developer: Startup Performance" command enabled]'
    '--prof-startup[Run CPU profiler during startup]'
    '--disable-extensions[Disable all installed extensions.]'
    '--inspect-extensions[Allow debugging and profiling of extensions.]'
    '--inspect-brk-extensions[Allow debugging and profiling of extensions with the extension host being paused after start.]'
    '--disable-gpu[Disable GPU hardware acceleration.]'
    '--upload-logs[Uploads logs from current session to a secure endpoint.]'
    '--max-memory[Max memory size for a window (in Mbytes).]:size in Mbytes:'
    '*:filename:_files'
)

_arguments -s $arguments
