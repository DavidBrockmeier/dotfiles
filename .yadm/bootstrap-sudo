#!/bin/bash


###############################################################################
# Linux (and Windows Subsystem for Linux)                                     #
###############################################################################
if [[ `uname` == 'Linux' ]]; then
  sudo add-apt-repository -y ppa:aacebedo/fasd
  # add repo to get newest git
  sudo add-apt-repository -y ppa:git-core/ppa
  # add repo to get newest tmux
  sudo add-apt-repository -y ppa:pi-rho/dev
  sudo apt-get update
  sudo apt-get dist-upgrade -y
  sudo apt-get install -y \
    zsh \
    build-essential \
    git \
    git-crypt \
    yadm \
    python-pip \
    python3-pip \
    cargo \
    tmux-next \
    direnv \
    highlight \
    fasd \
    trash-cli \
    tree \
    tig \
    aptitude \
    tmpreaper \
    nethack-console \
    fortune-mod \

  sudo apt autoremove --yes

  sudo -H pip install --upgrade pip
  sudo -H pip3 install --upgrade pip
  sudo -H pip install virtualenv virtualenvwrapper
  sudo -H pip3 install thefuck

  # overwrite old tmux
  sudo ln -sf /usr/bin/tmux-next /usr/bin/tmux

  if ! [ -x "$(command -v git-lfs)" ]; then
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
  fi
  sudo apt-get install git-lfs
  git lfs install --skip-smudge

  # do some cleanup
  trash-empty 30
  # unfortunately trash-empty 0.12 does not clean NTFS mounted file systems
  ~/bin/trash-empty-wsl +30
  sudo tmpreaper --all --showdeleted 30d /tmp

  if  [[ $SHELL != *zsh ]];
  then
    chsh -s $(which zsh)
  fi

  # haskell
  if ! [ -x "$(command -v stack)" ]; then
    wget -qO- https://get.haskellstack.org/ | sh
  fi

  # install ripgrep, depends on haskell
  if ! [ -f ~/.cargo/bin/rg ]; then
    cargo install ripgrep
  fi

  # install nodebrew, node version manager
  if ! [ -x "$(command -v nodebrew)" ]; then
    curl -L git.io/nodebrew | perl - setup
  fi

  # install fuzzy matcher (^R, **)
  if ! [ -x "$(command -v fzf)" ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
  fi

  # install zplug
  if [[ ! -d ~/.zplug ]]; then
    curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh| zsh
  fi

  # this is needed to suppress zsh message "compinit: insecure directories"
  sudo chmod -R 755 $ZPLUG_REPOS

  # when it is needed, this updates the OS, so it will take a LONG time
  sudo do-release-upgrade

  # no more Linux related things to do
  exit 0
fi
###############################################################################
# macOS
###############################################################################

# if xcode has just been manually installed
sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

sudo git lfs install --system

# stop startup sound
sudo nvram SystemAudioVolume=%80
sudo xcodebuild -license accept
# Add Watch Simulator to Launchpad
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"

# speed up time machine backups until next reboot
sudo sysctl debug.lowpri_throttle_enabled=0

###############################################################################
# installations for Klarna
###############################################################################
sudo gem install cocoapods
yes | sudo gem install bundler
yes | sudo gem update --system
yes | sudo gem update

###############################################################################
# bash4
###############################################################################
if ! grep -q "/usr/local/bin/bash" "/etc/shells"; then
   sudo sh -c 'echo /usr/local/bin/bash >> /etc/shells'
fi
# chsh -s /usr/local/bin/bash $SUDO_USER

###############################################################################
# zsh
###############################################################################
if ! grep -q "/usr/local/bin/zsh" "/etc/shells"; then
   sudo sh -c 'echo /usr/local/bin/zsh >> /etc/shells'
fi
chsh -s /usr/local/bin/zsh $SUDO_USER

sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText "This Mac belongs to Klas Mellbourn.\ne-mail: klas@mellbourn.net phone: +46 708 80 00 00\nReward offered for return of this Mac. No questions asked."
###############################################################################
# Update App Store apps
###############################################################################
# enable automatically "Install app updates" from the Mac App Store
sudo defaults write /Library/Preferences/com.apple.commerce AutoUpdate -bool TRUE
# enable automatically "install macOS updates"
sudo defaults write /Library/Preferences/com.apple.commerce AutoUpdateRestartRequired -bool TRUE

# turn on this when ok to upgrade macOS at work
sudo softwareupdate --schedule on
sudo softwareupdate -i -a --restart

# always boot in verbose mode (not MacOS GUI mode)
sudo nvram boot-args="-v"

# Enable firewall. Possible values:
#   0 = off
#   1 = on for specific sevices
#   2 = on for essential services
sudo defaults write /Library/Preferences/com.apple.alf globalstate -int 1

# allow remote login
sudo systemsetup -setremotelogin on

# run customer specific bootstrap
. $HOME/.yadm/bootstrap-sudo-customer
