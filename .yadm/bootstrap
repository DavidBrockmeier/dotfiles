#!/bin/bash
###############################################################################
# Klas Mellbourn's dotfile
#
# https://github.com/Mellbourn/dotfiles
# https://dotfiles.github.io/
#
# Many settings inspired by
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos
#
# Nice links here
# https://medium.com/@webprolific/getting-started-with-dotfiles-43c3602fd789#.2d3cfjv7d
###############################################################################

###############################################################################
# Homebrew                                                                      #
###############################################################################

if ! hash brew 2>/dev/null; then
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

brew update
brew upgrade
brew tap git-time-metric/gtm
brew install vim --with-override-system-vi

# this must be in alphabetical order!
apps="
ansible
bash
bash-completion
chromedriver
coreutils
docker-completion
docker-compose-completion
docker-machine-completion
fasd
fish
fzf
gettext
git
git-crypt
git-number
gnupg
googler
gradle
gtm
haskell-stack
highlight
htop
kubernetes-cli
liquidprompt
mas
maven
ncdu
nvm
pyenv
pyenv-virtualenv
pyenv-virtualenvwrapper
reattach-to-user-namespace
thefuck
tig
tldr
tmux
trash
tree
watch
yadm
yarn
zplug
zsh
zsh-autosuggestions
zsh-syntax-highlighting
"
# note: yarn will install node, which you might want to remove, since it is handled by nvm
alreadyInstalled=`brew ls`
installTheseLines=`comm -23 <(echo "$apps") <(echo "$alreadyInstalled")`
installThese=${installTheseLines//$'\n'/ }
echo $installThese | xargs brew install

casks="
adobe-reader
alfred
android-studio
bartender
charles
copyq
day-o
firefox
flux
flycut
gitup
google-chrome
google-drive
google-photos-backup
intellij-idea
iterm2
java
jdiskreport
kdiff3
keeweb
keycue
minikube
moom
plex-media-player
rowanj-gitx
screenhero
skype
slack
sourcetree
tripmode
virtualbox
visual-studio-code
vlc
webstorm
"

alreadyInstalled=`brew cask ls`
installTheseLines=`comm -23 <(echo "$casks") <(echo "$alreadyInstalled")`
installThese=${installTheseLines//$'\n'/ }
echo $installThese | xargs brew cask install

brew link --force gettext

# ruby version manager
if ! hash rvm 2>/dev/null; then
  # trust download
  command curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -
  # install rvm and latest ruby
  curl -sSL https://get.rvm.io | bash -s stable --ruby
fi

pip install virtualenvwrapper

# this is needed to suppress zsh message "compinit: insecure directories""
chmod g-w /usr/local/share

# install fisherman fish plugin manager
if [ ! -f ~/.config/fish/functions/fisher.fish ]; then
  curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher
fi
fish -c "thefuck --alias > ~/.config/fish/functions/fuck.fish"
fish -c "fisher"
if [ ! -d ~/.local/share/omf ]; then
  curl -L https://get.oh-my.fish > "${TMPDIR}install"
  chmod a+x "${TMPDIR}install"
  fish -c "${TMPDIR}install --path=~/.local/share/omf --config=~/.config/omf"
else
  fish -c "omf update"
fi

if [ ! -d ~/.zsh-git-prompt ]; then
  git clone git@github.com:olivierverdier/zsh-git-prompt.git ~/.zsh-git-prompt
  pushd ~/.zsh-git-prompt
  stack setup && stack build && stack install
  popd
fi

zsh -ic "zplug update"

# set up alternate gitconfig file used to determine local settings
yadm alt

# supress Spotlight indexing of code folder
if [ "$CODE_DIR" ]; then
  mkdir -p $CODE_DIR
  touch $CODE_DIR/.metadata_never_index
fi

tldr --update

# automate mac store installation
#mas signin klas@mellbourn.net

###############################################################################
# crontab                                                                     #
###############################################################################
# clean up old tmux ressurect sessions
function addtocrontab () {
  local frequency=$1
  local command=$2
  local job="$frequency $command"
  cat <(fgrep -i -v "$command" <(crontab -l)) <(echo "$job") | crontab -
}
addtocrontab "0 0 1 * *" "ls -tr \$HOME/.tmux/resurrect/*.txt | ghead -n-5 | xargs rm"

###############################################################################
# Finder                                                                      #
###############################################################################
defaults write com.apple.finder AppleShowAllFiles YES
# Show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
# sets the first window shown in finder to home
defaults write com.apple.finder NewWindowTarget PfHm
# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true
# Show Path bar in Finder
defaults write com.apple.finder ShowPathbar -bool true
# Use list view in all Finder windows by default, NOT STABLE?
#defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
# hide all icons on from desktop
defaults write com.apple.finder CreateDesktop false
# Remove items from the Trash after 30 days
defaults write com.apple.finder FXRemoveOldTrashItems -bool true
# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

###############################################################################
# Sound                                                                       #
###############################################################################
# Play feedback when volume is changed
defaults write -g com.apple.sound.beep.feedback -int 1
osascript -e 'set volume alert volume 100'

###############################################################################
# Miscellaneous                                                               #
###############################################################################
# Save screenshots to Pictures
defaults write com.apple.screencapture location "${HOME}/Pictures"
# Trackpad: enable tap to click for this user and for the login screen - don't work!
#defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
#defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
#defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
# disable dashboard (the stupid widget thing reached by ctrl-right)
defaults write com.apple.dashboard mcx-disabled -boolean true

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

###############################################################################
# Keyboard                                                                    #
###############################################################################
# THESE SEEM DANGEROUS, NOT CONSISTENT, destroys key repeat in Chrome?
# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 25

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

###############################################################################
# Dock                                                                        #
###############################################################################
# autohide dock - my screen realestate is valuable!
defaults write com.apple.dock autohide -bool true
# Set the icon size of Dock items to 24 pixels
defaults write com.apple.dock tilesize -int 24
# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

###############################################################################
# Safari & WebKit                                                             #
###############################################################################

# Show the full URL in the address bar (note: this still hides the scheme)
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
# Set Safari’s home page to `about:blank` for faster loading
defaults write com.apple.Safari HomePage -string "about:blank"
# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
# Enable Safari’s debug menu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
# Update extensions automatically
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true


# set TextEdit default format to plain text
defaults write com.apple.TextEdit RichText -int 0
