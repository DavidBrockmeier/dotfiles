#!/bin/bash
###############################################################################
# Klas Mellbourn's dotfile
#
# https://github.com/Mellbourn/dotfiles
# https://dotfiles.github.io/
#
# Many settings inspired by
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos
#
# Nice links here
# https://medium.com/@webprolific/getting-started-with-dotfiles-43c3602fd789#.2d3cfjv7d
###############################################################################

if [[ `uname` == 'Darwin' ]]; then
  ###############################################################################
  # macOS specific installations
  ###############################################################################

  ###############################################################################
  # Homebrew                                                                    #
  ###############################################################################

  if ! hash brew 2>/dev/null; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  brew cleanup
  brew update
  brew install vim --without-ruby --with-override-system-vi
  brew install yarn --without-node
  brew upgrade
  brew tap git-time-metric/gtm wix/brew
  brew tap caskroom/fonts # for font-fira-code
  brew tap caskroom/versions # for visual-studio-code-insiders
  # enables searching brew for commands not found, e.g. when. https://github.com/Homebrew/homebrew-command-not-found
  brew tap homebrew/command-not-found

  # not all computers need logitech drivers, also, these need sudo
  # brew tap caskroom/drivers # for logitech-gaming-software
  # brew cask install caskroom/drivers/logitech-gaming-software
  # brew cask install caskroom/drivers/logitech-options

  # remove brews here that were previously installed, to sync between machines
  # TODO: eventually remove these removals, when all machines have synced
  #brew uninstall --force ack fish
  #brew cask uninstall --force intellij-idea

  # this must be in alphabetical order!
  apps="
ansible
awscli
bash
bash-completion
cheat
chromedriver
cloc
coreutils
diff-so-fancy
direnv
docker-completion
docker-compose-completion
docker-machine-completion
duti
fasd
flow
fortune
fzf
gettext
git
git-crypt
git-lfs
git-number
gnupg
googler
gradle
graphicsmagick
grep
gtm
haskell-stack
highlight
htop
jq
kubernetes-cli
less
librsvg
liquidprompt
mas
maven
mono
nano
ncdu
nethack
nginx
nodebrew
parallel
postgresql
pv
pyenv
pyenv-virtualenv
pyenv-virtualenvwrapper
reattach-to-user-namespace
redis
ripgrep
stunnel
thefuck
tig
tldr
tmux
trash
tree
wakeonlan
watch
watchman
wemux
wix/brew/applesimutils
yadm
zplug
zsh
zsh-autosuggestions
zsh-syntax-highlighting
"
  # note: yarn will install node, which you might want to remove, since it is handled by nvm
  alreadyInstalled=`brew ls`
  installTheseLines=`comm -23 <(echo "$apps") <(echo "$alreadyInstalled")`
  installThese=${installTheseLines//$'\n'/ }
  echo $installThese | xargs brew install

  casks="
a-better-finder-attributes
abstract
adobe-acrobat-reader
alfred
android-sdk
android-studio
atom
bartender
charles
dash
day-o
docker
eve
firefox
font-fira-code
fork
gitup
google-backup-and-sync
google-chrome
imageoptim
intel-power-gadget
iterm2
java
jdiskreport
kdiff3
keeweb
keycue
launchcontrol
minikube
moom
muzzle
philips-hue-sync
plex-media-player
postman
private-internet-access
react-native-debugger
reactotron
rescuetime
rowanj-gitx
sketch
skype
slack
sourcetree
spotify
tor-browser
tripmode
virtualbox
visual-studio-code
vlc
zeplin
"

  alreadyInstalled=`brew cask ls`
  installTheseLines=`comm -23 <(echo "$casks") <(echo "$alreadyInstalled")`
  installThese=${installTheseLines//$'\n'/ }
  echo $installThese | xargs brew cask install

  brew link --force gettext

  echo will cite | parallel --citation > /dev/null 2>&1

  # set up wemux user name
  sed -i -- "s/host_list=(brew)/host_list=($USER)/" /usr/local/etc/wemux.conf
  sed -i -- 's/# allow_server_change="true"/allow_server_change="true"/' /usr/local/etc/wemux.conf

  # ruby version manager
  if ! hash rvm 2>/dev/null; then
    # trust download
    command curl -sSL https://rvm.io/mpapis.asc | gpg --import -
    # install rvm and latest ruby
    curl -sSL https://get.rvm.io | bash -s stable --ruby
    # local LATEST_STABLE_RUBY_VERSON=$(rvm list known | grep "\[ruby-\]" | grep -v "preview" | tail -1 | sed 's/\[ruby-\]\([0-9]*\.[0-9]\)*\[.*\]/\1/g')
    # rvm install ruby-$LATEST_STABLE_RUBY_VERSON
  fi
  # update rvm
  rvm get stable --auto

  pip install --upgrade pip setuptools
  pip install virtualenvwrapper
  pip install autopep8 pylint rope
  # install tmux session manager
  pip install tmuxp -U

  # finish PIA installation
  # if you already have a manual installation, you will have to remove it with
  # rm -rf /Applications/Private\ Internet\ Access.app
  if [ ! -d /Applications/Private\ Internet\ Access.app ]; then
    /usr/local/Caskroom/private-internet-access/v70/Private\ Internet\ Access\ Installer.app/Contents/MacOS/runner.sh
  fi

  # this is needed to suppress zsh message "compinit: insecure directories""
  chmod g-w /usr/local/share ~/.zsh-personal-completions
  # this seems healthy to do every now and then to make sure zsh completion works
  trash ~/.zcompdump* ~/.zcompcache 2> /tmp/zcomp_delete_error.txt

fi ############################################################################
# configuration for both Mac and Linux
###############################################################################

# this can soon be removed
trash ~/.gitconfig.local

# This git prompt is an optimized fork from olivierverdier/zsh-git-prompt. It can still be slow in large repos.
# note that this version does not compile using haskell
if [ ! -d ~/.zsh-git-prompt ]; then
  git clone git@github.com:tombh/zsh-git-prompt.git ~/.zsh-git-prompt
fi

# set up alternate gitconfig file used to determine local settings
yadm alt

# supress Spotlight indexing of code folder
if [ "$CODE_DIR" ]; then
  mkdir -p $CODE_DIR
  touch $CODE_DIR/.metadata_never_index
fi

if [ -x "$(command -v /usr/local/opt/nodebrew/bin/nodebrew)" ]; then
  /usr/local/opt/nodebrew/bin/nodebrew setup_dirs
fi
nodebrew selfupdate
nodebrew install-binary latest
#nodebrew use latest

if ! [ -x "$(command -v tldr)" ]; then
  yarn global add tldr
fi
tldr --update

###############################################################################
# development
###############################################################################
yarn global add eslint

############################################################################
# configuration for just Linux
###############################################################################
if [[ `uname` == 'Linux' ]]; then
  yarn global add diff-so-fancy

  # do some cleanup
  trash-empty 30
  # unfortunately trash-empty 0.12 does not clean NTFS mounted file systems
  ~/bin/trash-empty-wsl +30

  exit 0
fi ############################################################################
# mac specific configurations
###############################################################################

###############################################################################
# development
###############################################################################
npm i -g npm node-gyp
npm rm -g eslint
npm update -g
xcode-select --install
# save some disk
xcrun simctl delete unavailable

# automate mac store installation
#mas signin klas@mellbourn.net

# remove itunes from login items. This way it does not open when you plug in an iPhone
osascript -e 'tell application "System Events" to delete login item "iTunesHelper"' 2> /tmp/delete_itunes_helper_error.txt

# zplug update must be executed late in the script, otherwise it interrupts with "suspened (tty output)"
zsh -ic "zplug clean --force; zplug update"

docker system prune -f 2>> /tmp/docker_system_prune.err.txt

###############################################################################
# Finder                                                                      #
###############################################################################
# open text files in Visual Studio Code
duti -s com.microsoft.VSCode public.plain-text all
defaults write com.apple.finder AppleShowAllFiles YES
# Show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
# sets the first window shown in finder to home
defaults write com.apple.finder NewWindowTarget PfHm
# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true
# Show Path bar in Finder
defaults write com.apple.finder ShowPathbar -bool true
# Use list view in all Finder windows by default (won't affect folders where there is already a DS_Store)
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
# hide all icons on from desktop
defaults write com.apple.finder CreateDesktop false
# Remove items from the Trash after 30 days
defaults write com.apple.finder FXRemoveOldTrashItems -bool true
# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

###############################################################################
# Sound                                                                       #
###############################################################################
# Play feedback when volume is changed
defaults write -g com.apple.sound.beep.feedback -int 1

###############################################################################
# Miscellaneous                                                               #
###############################################################################
# Save screenshots to Pictures
defaults write com.apple.screencapture location "${HOME}/Pictures"
# disable dashboard (the stupid widget thing reached by ctrl-right)
defaults write com.apple.dashboard mcx-disabled -boolean true

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# restore windows when you restart an application
defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool true

# show battery percent
defaults write com.apple.menuextra.battery ShowPercent YES

# set TextEdit default format to plain text
defaults write com.apple.TextEdit RichText -int 0

# smoother font on low DPI https://code.visualstudio.com/updates/v1_28#_blurriness-on-macos-mojave
defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO

###############################################################################
# Mouse & Trackpad                                                            #
###############################################################################
# increase trackpad tracking speed - works!
defaults write -g com.apple.trackpad.scaling -float 3.0
# increase mouse tracking speed
defaults write -g com.apple.mouse.scaling -float 3.0
# Trackpad: enable tap to click for this user and for the login screen - don't work!
#defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
#defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
#defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseButtonMode TwoButton
# Smart zoom disabled, double-tap with one finger (set to 1 to enable)
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseOneFingerDoubleTapGesture -int 0
# Double-tap with two fingers to Mission Control (set to 0 to disable)
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseTwoFingerDoubleTapGesture -int 3
# Two finger horizontal swipe
# 0 = Swipe between pages with one finger
# 1 = Swipe between pages
# 2 = Swipe between full screen apps with two fingers, swipe between pages with one finger (Default Mode)
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseTwoFingerHorizSwipeGesture -int 2

###############################################################################
# Calendar                                                                    #
###############################################################################
# Show week numbers (10.8 only)
defaults write com.apple.iCal "Show Week Numbers" -bool true
# disable Show invitation messages in Notification Center
defaults write com.apple.iCal InvitationNotificationsDisabled -int 1
# disable Time to Leave alert
defaults write com.apple.iCal TimeToLeaveEnabled  -int 0

###############################################################################
# Keyboard                                                                    #
###############################################################################
# THESE SEEM DANGEROUS, NOT CONSISTENT, destroys key repeat in Chrome?
# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 25

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Use all F1, F2, etc keys as standard function keys
defaults write -g com.apple.keyboard.fnState -bool true

###############################################################################
# Dock                                                                        #
###############################################################################
# autohide dock - my screen realestate is valuable!
defaults write com.apple.dock autohide -bool true
# Set the icon size of Dock items to 24 pixels
defaults write com.apple.dock tilesize -int 24
# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

###############################################################################
# Safari & WebKit                                                             #
###############################################################################
# Show status bar
defaults write com.apple.Safari ShowStatusBar -bool true
defaults write com.apple.Safari ShowOverlayStatusBar -bool true
# Show the full URL in the address bar (note: this still hides the scheme)
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
# Safari opens with: last session
defaults write com.apple.Safari AlwaysRestoreSessionAtLaunch -bool true
# Set Safari’s home page to `about:blank` for faster loading
defaults write com.apple.Safari HomePage -string "about:blank"
# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
# Enable Safari’s debug menu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
# Update extensions automatically
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true
# Make Safari’s search banners default to Contains instead of Starts With
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
# Website use of location services
# 0 = Deny without prompting
# 1 = Prompt for each website once each day
# 2 = Prompt for each website one time only
defaults write com.apple.Safari SafariGeolocationPermissionPolicy -int 2
